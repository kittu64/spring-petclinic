pipeline{
    agent any
    tools{
        maven 'maven'
    }

    /* environment{
      NEXUSIP='13.50.106.241'
      NEXUSPORT='8081'
 } */
    stages{
        stage('build maven project'){
            steps{
                sh 'mvn clean install package'
            }
        }
            /* stage('publish to nexus') {
           steps{
                 nexusArtifactUploader artifacts: [[artifactId: 'spring-boot-starter-parent', classifier: '', file: 'target/spring-petclinic-3.0.0-SNAPSHOT.jar', type: 'jar']], credentialsId: '886d0065-3d0a-4d54-8e2e-ef576afc6a9e', groupId: 'org.springframework.boot', nexusUrl: "${NEXUSIP}:${NEXUSPORT}", nexusVersion: 'nexus3', protocol: 'http', repository: 'petclinic', version: '3.0.2-SNAPSHOT'
}
}  

        

stage('Sonarqube analysis'){
steps{
    withSonarQubeEnv('sonarqube'){

   sh 'mvn clean verify sonar:sonar \
  -Dsonar.projectKey=petclinicsonarqube-maven \
  -Dsonar.login=sqp_86b7b7bd22d181b83ab06c04c9b4b70d32563ab7'
}
}
}
*/
stage('Build docker image'){
            steps{
              script{
                dockerImage = docker.build REGISTRY
              }
            }
          }
          stage('Docker Push'){
            steps{
              script{
                sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 552882621694.dkr.ecr.us-east-1.amazonaws.com'
                sh 'docker push 552882621694.dkr.ecr.us-east-1.amazonaws.com/petclinic:latest' 
              }
            }
          }
stage('Deploy to EKS') {
            steps {
                script {
                    withKubeConfig(caCertificate: '', clusterName: 'petclinic_eks_cluster', contextName: '', credentialsId: 'kube', namespace: '', restrictKubeConfigAccess: false, serverUrl: '') {
                        sh "kubectl apply -f petclinic-k8s.yaml"
                    }
                }
            }              
          }  

  


        stage('test'){
            steps{
                echo 'testing....'
            }
        }
    }
}

