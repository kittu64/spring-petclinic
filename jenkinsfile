pipeline{
    agent any
    tools {maven "maven"}
     environment {
      RELEASE_REPO = 'petclinic'
      NEXUS_IP = '54.90.109.24'
      NEXUS_PORT ='8081'
      NEUXS_LOGIN ='neuxs'
      DOCKERHUB_CREDENTIALS = credentials('docker-token')
      REGISTRY = 'petclinic'
     }
    stages {
        stage('clone git') {
          steps{
            git branch: 'main', credentialsId: 'edc43311-5408-4645-8be5-df7162b7f887', url: 'https://github.com/nagadurga8/spring-petclinic.git'
          }
        }
          stage('Build') {
              steps {
                  sh 'mvn clean package'
                  
              }
          }
          //stage('sonarqube') {
          //  steps {
          //    withSonarQubeEnv('sonarqube') {
          //   sh 'mvn clean verify sonar:sonar \
          //      -Dsonar.projectKey=petclinic \
          //      -Dsonar.login=squ_0f886848015e7cce4e119435e1448df97b27148b'
          //    }
          //  }
          //}
          //stage('upload jar to nexus'){
          //  steps{
          //    nexusArtifactUploader(
          //     nexusVersion: 'nexus3',
          //     protocol: 'http',
          //     nexusUrl:"${NEXUS_IP}:${NEXUS_PORT}",              
          //     groupId: 'org.springframework.samples',
          //     version: "${env.BUILD_ID}-${env.BUILD_TIMESTAMP}",
          //     repository:"${RELEASE_REPO}",
          //     credentialsId: "${NEUXS_LOGIN}",
          //     artifacts: [
          //       [artifactId: 'spring-petclinic',
          //        classifier: '',
          //        file: 'target/spring-petclinic-3.0.0-SNAPSHOT.jar',
          //        type: 'jar']
          //     ]
          //      )
          //  }
          //}
          stage('Build docker image'){
            steps{
              script{
                dockerImage = docker.build REGISTRY
              }
            }
          }
          stage('Docker Push'){
            steps{
              script{
                sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 552882621694.dkr.ecr.us-east-1.amazonaws.com'
                sh 'docker push 552882621694.dkr.ecr.us-east-1.amazonaws.com/petclinic:latest' 
              }
            }
          }
          stage('Deploy to EKS') {
            steps {
                script {
                    withKubeCredentials(kubectlCredentials: [[caCertificate: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1EUXdOakEwTXpNek1Gb1hEVE16TURRd016QTBNek16TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTGNsCjQ1MEFaTFRtNitCTFJvOCtqbk42UE9DREZBWVZtMExvcElRTDF4ZjBBNHRKS2NIS2RDck5XL1dKcGJRaFdFYUsKOUNVamMzODZDazBIRDBKTkVpVTBDcGtwQmphVGdWNzJsSFJ6RkFlZU1QRG1HSi9qbjJGbGp2aU5oSXl2THZHbwpIV3lWUzZ3d3I3K1Y2M1lrWFptU0FzckU1VTMyelRrNnZKSDdLbEJYZk9KY2hheUpHMEFxc1hYN0FTUHRiNFhQClhMN1NvaTFmcGVMT2Z1TnI1aE5HL01qZnZaZm5yTjhLSUVmQVhsSmJNMlJEV0l5NHlNbThIN2VidG1DYUhUbFoKdFdudjhRWVZjWlF4bXo2YUtGay9tWXNLZGlCTGpDTTBLbE9KRnRrYmJNTDdHWEw2WWI4S0ZkTWp4RTJrR1FjVApzbjU0bHNnSzdxem0wRFp1RVNrQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOZ2xrUk9PaVJzM0NVOElIUFdCVFM2RndLYkpNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSGp6K0xwWjcyY2RoL2J4YTdrUQpWV1VIUjNBYUxXNHY5WVJId1c3VXJYZ0xWT0MwSEdwVDN0U2hUM3FHQXFsMzlQRG9tMG12NUJHM3dTRG1mZURLCnJpV1lWUzZnT0FoWTBlUzNJai83QkpPOVhYNC8vVVFnZWNOZTJKcTFnTUNhUllpa0RLZUtDRHpwZktKWmlqZ1YKaTJNZXhTRENKdFRGR1gvU2w5QXprWHZmaENUOUg1M3FDS3o0RFhvMU1qbDM1Nk1zdHFMTVFnVGJtR2RMNTlGRApCYUVEaWFkMXBNSUZEOFZpV3BzdEJGcnkrTHRqK3FuMHFxOGNoZCtjYmlyU1VHYUZKNDM3RGxVSFRrcy9lNm1yCnJZcHgvMGdpRkU4a05NQXl4T0NoRkFraHYyYWVHU1lNMUJCTjNEL3JVb1l3TGxxRXJnb0lFSVFHOGkwenVZY2UKQzlRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==', clusterName: 'petclinic_eks_cluster', contextName: '', credentialsId: 'kube', namespace: '', serverUrl: 'https://206A62735657A69A17F468F7370A4B93.gr7.us-east-1.eks.amazonaws.com']]) {
                        sh "kubectl apply -f petclinic-k8s.yaml"
                    }
                }
            }              
          }  
          
    }
}